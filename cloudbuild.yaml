steps:
  # Step 1: Set up the environment and install dependencies
  - name: 'python'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pip install --upgrade pip
        pip install -r requirements.txt  # Install your dependencies
        pip install pylint pytest pre-commit  # Install linting and testing tools

  # Step 2: Run pylint for linting
  - name: 'python'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pylint .  # Lint the entire repository

  # Step 3: Run pytest to execute tests
  - name: 'python'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pytest  # Run all tests in the repository

  # Step 4: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker image'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/fastapi-weather-app:$BUILD_ID', '.']
  
  # Step 5: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker image'
    args: ['push', 'gcr.io/$PROJECT_ID/fastapi-weather-app:$BUILD_ID']
  
  # Step 6: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run'
    entrypoint: 'gcloud'
    args: ['run', 'deploy', 'fastapi-weather-app',
           '--image', 'gcr.io/$PROJECT_ID/fastapi-weather-app:$BUILD_ID',
           '--platform', 'managed',
           '--region', 'europe-west1',
           '--allow-unauthenticated',
           '--port', '8081']

images:
  - 'gcr.io/$PROJECT_ID/fastapi-weather-app:$BUILD_ID'